# Generated by Django 5.2.3 on 2025-08-28 22:24

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0010_careerdocument_professionalprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='JournalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('daily_standup', 'Daily Standup'), ('weekly_review', 'Weekly Review'), ('project_retrospective', 'Project Retrospective'), ('learning_log', 'Learning Log'), ('achievement_record', 'Achievement Record'), ('challenge_analysis', 'Challenge Analysis'), ('goal_setting', 'Goal Setting'), ('skill_assessment', 'Skill Assessment'), ('career_reflection', 'Career Reflection'), ('networking_notes', 'Networking Notes')], max_length=30)),
                ('description', models.TextField()),
                ('prompts', models.JSONField(default=list)),
                ('suggested_tags', models.JSONField(blank=True, default=list)),
                ('default_category', models.CharField(choices=[('work', 'Work & Career'), ('learning', 'Learning & Development'), ('project', 'Project Progress'), ('achievement', 'Achievements'), ('reflection', 'Personal Reflection'), ('goal', 'Goals & Planning'), ('challenge', 'Challenges & Solutions'), ('networking', 'Networking & Relationships'), ('skill', 'Skill Development'), ('idea', 'Ideas & Innovation')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('ai_prompts', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('work', 'Work & Career'), ('learning', 'Learning & Development'), ('project', 'Project Progress'), ('achievement', 'Achievements'), ('reflection', 'Personal Reflection'), ('goal', 'Goals & Planning'), ('challenge', 'Challenges & Solutions'), ('networking', 'Networking & Relationships'), ('skill', 'Skill Development'), ('idea', 'Ideas & Innovation')], default='reflection', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('mood', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('neutral', 'Neutral'), ('challenging', 'Challenging'), ('difficult', 'Difficult')], default='neutral', max_length=20)),
                ('work_context', models.CharField(blank=True, max_length=100)),
                ('skills_mentioned', models.JSONField(blank=True, default=list)),
                ('achievements', models.JSONField(blank=True, default=list)),
                ('challenges', models.JSONField(blank=True, default=list)),
                ('ai_insights', models.JSONField(blank=True, default=dict)),
                ('ai_suggestions', models.JSONField(blank=True, default=list)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('key_themes', models.JSONField(blank=True, default=list)),
                ('is_private', models.BooleanField(default=True)),
                ('is_portfolio_relevant', models.BooleanField(default=False)),
                ('word_count', models.IntegerField(default=0)),
                ('reading_time', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['date_created'], name='api_journal_date_cr_5ef64a_idx'), models.Index(fields=['category'], name='api_journal_categor_816fcc_idx'), models.Index(fields=['mood'], name='api_journal_mood_d2f873_idx'), models.Index(fields=['is_portfolio_relevant'], name='api_journal_is_port_267f04_idx')],
            },
        ),
        migrations.CreateModel(
            name='JournalGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('career', 'Career Development'), ('skill', 'Skill Acquisition'), ('project', 'Project Completion'), ('learning', 'Learning Objective'), ('networking', 'Networking Goal'), ('personal', 'Personal Development')], max_length=20)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='not_started', max_length=20)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('milestones', models.JSONField(blank=True, default=list)),
                ('ai_recommendations', models.JSONField(blank=True, default=list)),
                ('difficulty_assessment', models.CharField(blank=True, max_length=20)),
                ('related_entries', models.ManyToManyField(blank=True, to='api.journalentry')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='JournalInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('weekly_summary', 'Weekly Summary'), ('monthly_review', 'Monthly Review'), ('mood_analysis', 'Mood Analysis'), ('progress_tracking', 'Progress Tracking'), ('skill_development', 'Skill Development'), ('achievement_summary', 'Achievement Summary'), ('goal_assessment', 'Goal Assessment'), ('career_guidance', 'Career Guidance')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('date_generated', models.DateTimeField(default=django.utils.timezone.now)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('entries_analyzed', models.IntegerField(default=0)),
                ('key_metrics', models.JSONField(blank=True, default=dict)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('ai_confidence', models.FloatField(default=0.0)),
                ('data_sources', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['-date_generated'],
                'unique_together': {('insight_type', 'period_start', 'period_end')},
            },
        ),
    ]
