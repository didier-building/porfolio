# Generated by Django 5.2.3 on 2025-09-25 22:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('spam', 'Spam')], default='new', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list, help_text='Tags for categorization')),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Use JSON array format for multiple bullet points')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(choices=[('work', 'Work Experience'), ('education', 'Education')], default='work', max_length=20)),
                ('organization', models.CharField(blank=True, help_text='Alternative to company name', max_length=200)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('page_views', models.IntegerField(default=0)),
                ('contact_submissions', models.IntegerField(default=0)),
                ('ai_chat_interactions', models.IntegerField(default=0)),
                ('top_projects_viewed', models.JSONField(default=list, help_text='List of most viewed project IDs')),
                ('unique_visitors', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Portfolio Analytics',
                'verbose_name_plural': 'Portfolio Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('proficiency', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('category', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['-proficiency', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=100)),
                ('handle', models.CharField(max_length=100)),
                ('url', models.URLField()),
            ],
            options={
                'ordering': ['platform'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Technologies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('live_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('web', 'Web Development'), ('cloud', 'Cloud/DevOps'), ('blockchain', 'Blockchain')], default='web', max_length=20)),
                ('image_url', models.URLField(blank=True, help_text='External image URL (e.g., Unsplash)')),
                ('features', models.JSONField(default=list, help_text='List of project features')),
                ('technologies', models.ManyToManyField(related_name='projects', to='api.technology')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
